"use strict";(self.webpackChunksecure_event_emitter_website=self.webpackChunksecure_event_emitter_website||[]).push([[978],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=l(n),d=a,y=p["".concat(u,".").concat(d)]||p[d]||m[d]||o;return n?r.createElement(y,i(i({ref:t},s),{},{components:n})):r.createElement(y,i({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2648:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:3},i=void 0,c={unversionedId:"Validator Function",id:"Validator Function",title:"Validator Function",description:"We can define a strict payload structure and emitter can only work with that structured data.",source:"@site/docs/Validator Function.md",sourceDirName:".",slug:"/Validator Function",permalink:"/secure-event-emitter/docs/Validator Function",draft:!1,editUrl:"https://github.com/Ruben-Arushanyan/secure-event-emitter/edit/master/website/docs/Validator Function.md",tags:[],version:"current",lastUpdatedBy:"Ruben Arushanyan",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"SecureEventEmitter",permalink:"/secure-event-emitter/docs/SecureEventEmitter"}},u={},l=[{value:"Usage Example",id:"usage-example",level:2}],s={toc:l};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"We can define a strict payload structure and emitter can only work with that structured data."),(0,a.kt)("h2",{id:"usage-example"},"Usage Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import {SecureEventEmitter} from 'secure-event-emitter'\n\n// create emitterKey\nconst emitterKey = Symbol()\n\n// create validator function\nconst validator = (x) => {\n    if (typeof x !== 'number') {\n        return 'Can emit only numbers!' // error message\n    }\n}\n\n// create myEmitter instance\nconst myEmitter = new SecureEventEmitter(\n    ['event-1', 'event-2'],\n    emitterKey,\n    validator,\n)\n\n// add listeners\nmyEmitter.on('event-1', (x) => {\n    console.log(x)\n})\nmyEmitter.on('event-2', (x) => {\n    console.log(x)\n})\n\nmyEmitter.unlock(emitterKey).emit('event-1', 2021)\nmyEmitter.unlock(emitterKey).emit('event-2', '2021') // TypeError: Can emit only numbers!\n\n")))}m.isMDXComponent=!0}}]);