"use strict";(self.webpackChunksecure_event_emitter_website=self.webpackChunksecure_event_emitter_website||[]).push([[745],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>d});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),m=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=m(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=m(r),d=i,v=p["".concat(c,".").concat(d)]||p[d]||u[d]||a;return r?n.createElement(v,o(o({ref:t},s),{},{components:r})):n.createElement(v,o({ref:t},s))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var m=2;m<a;m++)o[m]=r[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},7383:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>m});var n=r(7462),i=(r(7294),r(3905));const a={sidebar_position:2,title:"SecureEventEmitter"},o="Class:  `SecureEventEmitter`",l={unversionedId:"SecureEventEmitter",id:"SecureEventEmitter",title:"SecureEventEmitter",description:"API",source:"@site/docs/SecureEventEmitter.md",sourceDirName:".",slug:"/SecureEventEmitter",permalink:"/docs/SecureEventEmitter",draft:!1,editUrl:"https://github.com/Ruben-Arushanyan/secure-event-emitter/edit/master/website/docs/SecureEventEmitter.md",tags:[],version:"current",lastUpdatedBy:"Ruben Arushanyan",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"SecureEventEmitter"},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/introduction"},next:{title:"Validator Function",permalink:"/docs/Validator Function"}},c={},m=[{value:"API",id:"api",level:2},{value:"<code>new SecureEventEmitter(types, emitterKey, [validator])</code>",id:"new-secureeventemittertypes-emitterkey-validator",level:3},{value:"Usage Example",id:"usage-example",level:2}],s={toc:m};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"class--secureeventemitter"},"Class:  ",(0,i.kt)("inlineCode",{parentName:"h1"},"SecureEventEmitter")),(0,i.kt)("h2",{id:"api"},"API"),(0,i.kt)("h3",{id:"new-secureeventemittertypes-emitterkey-validator"},(0,i.kt)("inlineCode",{parentName:"h3"},"new SecureEventEmitter(types, emitterKey, [validator])")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"types")," ",(0,i.kt)("strong",{parentName:"li"},"string[]"),"  : All event types\u2024"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"emitterKey")," ",(0,i.kt)("strong",{parentName:"li"},"string | symbol")," : Emitter Key: Without which we cannot perform ",(0,i.kt)("strong",{parentName:"li"},".emit()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"validator")," ",(0,i.kt)("strong",{parentName:"li"},"function"),": Function for validating emitted values")),(0,i.kt)("h2",{id:"usage-example"},"Usage Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import {SecureEventEmitter} from 'secure-event-emitter'\n\n// create emitterKey\nconst emitterKey = Symbol()\n\n// create myEmitter instance\nconst myEmitter = new SecureEventEmitter(\n    ['event-1', 'event-2'], // all event types\n    emitterKey      // emitter key is an any Symbol or String type value\n)\n\n// add listeners\nmyEmitter.on('event-1', (a, b) => {\n    console.log(a, b)\n})\nmyEmitter.on('event-2', (x) => {\n    console.log(x)\n})\n\nmyEmitter.unlock(emitterKey).emit('event-1', 2021, 2022)\nmyEmitter.unlock(emitterKey).emit('event-2', 123)\n\n")))}u.isMDXComponent=!0}}]);